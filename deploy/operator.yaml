apiVersion: v1
kind: Namespace
metadata:
  name: flux-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: bigbang.simple.deployment
spec:
  scope: Namespaced
  group: simple.deployment
  names:
    kind: BigBang 
    plural: bigbang
    singular: bigbang 
    shortNames:
      - bb 
  versions:
    - name: v1
      served: true
      storage: true
      subresources: { status: { } }  # comment/uncomment for experiments
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              x-kubernetes-preserve-unknown-fields: true
            status:
              type: object
              x-kubernetes-preserve-unknown-fields: true
      additionalPrinterColumns:
        - name: Duration
          type: string
          priority: 0
          jsonPath: .spec.duration
          description: For how long the pod should sleep.
        - name: Children
          type: string
          priority: 0
          jsonPath: .status.create_fn.children
          description: The children pods created.
        - name: Message
          type: string
          priority: 0
          jsonPath: .status.create_fn.message
          description: As returned from the handler (sometimes).
---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: default 
  name: bigbang-account
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: bigbang-role-cluster
rules:

  # Framework: knowing which other operators are running (i.e. peering).
  - apiGroups: [simple.deployment]
    resources: [clusterbigbangpeerings]
    verbs: [list, watch, patch, get]

  - apiGroups: [""]
    resources: [namespaces]
    verbs: [list, watch]

  # Framework: admission webhook configuration management.
  - apiGroups: [admissionregistration.k8s.io/v1, admissionregistration.k8s.io/v1beta1]
    resources: [validatingwebhookconfigurations, mutatingwebhookconfigurations]
    verbs: [create, patch]

  # Application: read-only access for watching cluster-wide.
  - apiGroups: [simple.deployment]
    resources: [bigbang]
    verbs: [list, watch]

  - apiGroups: [apiextensions.k8s.io, rbac.authorization.k8s.io]
    resources: ["customresourcedefinitions", "clusterroles", "clusterrolebindings"]
    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: default 
  name: bigbang-role-namespaced
rules:
  # Framework: knowing which other operators are running (i.e. peering).
  - apiGroups: [simple.deployment]
    resources: [bigbangpeerings]
    verbs: [list, watch, patch, get]

  # Framework: posting the events about the handlers progress/errors.
  - apiGroups: [""]
    resources: [events]
    verbs: [create]

  # Application: watching & handling for the custom resource we declare.
  - apiGroups: [simple.deployment]
    resources: [bigbang]
    verbs: [list, watch, patch]

  # Application: other resources it produces and manipulates.
  # Here, we create Jobs+PVCs+Pods, but we do not patch/update/delete them ever.
  - apiGroups: [batch, extensions]
    resources: [jobs]
    verbs: [create]
  - apiGroups: [""]
    resources: [pods, persistentvolumeclaims]
    verbs: [create]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: flux-cluster-role
rules:
- apiGroups: ["*"]
  resources: ["*"]
  verbs: ["*"]
---
# cluster admin is required to install flux https://fluxcd.io/flux/installation/#prerequisites
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: admin-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: bigbang-account
    namespace: default 
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: default 
  name: bigbang-rolebinding-namespaced
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: bigbang-role-namespaced
subjects:
  - kind: ServiceAccount
    name: bigbang-account
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: flux-system 
  name: flux-cluster-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: flux-cluster-role
subjects:
  - kind: ServiceAccount
    name: bigbang-account
    namespace: default
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: bbctl-config
  namespace: default
data:
  config.yaml: |
    bbctl-log-format: text
    bbctl-log-level: info
    bbctl-log-output: stdout
    bbctl-version: 1.0.0
    big-bang-credential-helper: credentials-file
    big-bang-credential-helper-credentials-file-path: /root/.bbctl/credentials.yaml
    big-bang-repo: /root/repos/bigbang
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bigbang-operator 
  labels:
    app: bigbang-operator 
spec:
  replicas: 1 
  selector:
    matchLabels:
      app: bigbang-operator
  template:
    metadata:
      labels:
        app: bigbang-operator
    spec:
      serviceAccountName: bigbang-account
      containers:
      - name: bigbang-operator 
        image: rmccarth/bigbang-operator:0.0.23
        imagePullPolicy: Always
        resources:
          requests:
            memory: "100Mi"
            cpu: "250m"
        volumeMounts:
        - name: bbctl-configuration
          mountPath: /root/.bbctl
      volumes:
      - name: bbctl-configuration
        projected:
          sources:
          - secret:
              name: bbctl-credentials
          - configMap:
              name: bbctl-config

